{"ast":null,"code":"var _jsxFileName = \"/home/shalu/minifabric/hproject/channel1/vars/chaincode/identitychaincode1/apiserver/digi-prism/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [readMarbledata, setreadMarbleData] = React.useState('');\n  const [marbleName, setmarbleName] = React.useState('');\n  const getreadMarble = () => {\n    fetch(`/api/readMarble/${inputText}`).then(res => res.json()).then(data => setreadMarbleData(data.response));\n  };\n  const handleButtonClick = () => {\n    fetch(`/api/getMarblesByRange/${inputText}`).then(res => res.json()).then(data => setData(data.response));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: marbleName,\n        onChange: e => setmarbleName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getreadMarble,\n        children: \"readMarble\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), readMarbledata && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '500px',\n          overflowWrap: 'break-word'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Response: \", readMarbledata]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        children: \"gerMarblesByRange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '500px',\n          overflowWrap: 'break-word'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Response: \", data]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bWiIsszJekwy4+1F81BrQINyA/k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","jsxDEV","_jsxDEV","App","_s","readMarbledata","setreadMarbleData","useState","marbleName","setmarbleName","getreadMarble","fetch","inputText","then","res","json","data","response","handleButtonClick","setData","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","maxWidth","overflowWrap","setInputText","_c","$RefreshReg$"],"sources":["/home/shalu/minifabric/hproject/channel1/vars/chaincode/identitychaincode1/apiserver/digi-prism/src/App.js"],"sourcesContent":["import React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [readMarbledata, setreadMarbleData] = React.useState('');\n  const [marbleName, setmarbleName] = React.useState('');\n  \n    const getreadMarble = () => {\n    fetch(`/api/readMarble/${inputText}`)\n      .then((res) => res.json())\n      .then((data) => setreadMarbleData(data.response));\n  };\n  \n  const handleButtonClick = () => {\n    fetch(`/api/getMarblesByRange/${inputText}`)\n      .then((res) => res.json())\n      .then((data) => setData(data.response));\n  };\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      \n        <input\n        type=\"text\"\n        value={marbleName}\n        onChange={e => setmarbleName(e.target.value)}\n      />\n      \n      <button onClick={getreadMarble}>readMarble</button>\n      \n        {readMarbledata && (\n        <div style={{ maxWidth: '500px', overflowWrap: 'break-word' }}>\n          <p>Response: {readMarbledata}</p>\n        </div>\n      )}\n      \n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={e => setInputText(e.target.value)}\n      />\n      \n      <button onClick={handleButtonClick}>gerMarblesByRange</button>\n      \n        {data && (\n        <div style={{ maxWidth: '500px', overflowWrap: 'break-word' }}>\n          <p>Response: {data}</p>\n        </div>\n      )}  \n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}