{"ast":null,"code":"var _jsxFileName = \"/home/shalu/minifabric/hproject/channel1/vars/chaincode/identitychaincode1/apiserver/digi-prism/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [readMarbledata, setreadMarbleData] = React.useState('');\n  const [marbleName, setmarbleName] = React.useState('');\n  const [deleteMarbledata, setdeleteMarbleData] = React.useState('');\n  const [deletemarbleName, setdeletemarbleName] = React.useState('');\n  const [readMarblePrivateDetailsdata, setreadMarblePrivateDetailsData] = React.useState('');\n  const [getMarblesByRangedata, setgetMarblesByRangeData] = React.useState('');\n  const [marbleNameRange1, setmarbleNameRange1] = React.useState('');\n  const [marbleNameRange2, setmarbleNameRange2] = React.useState('');\n  const [initMarbleformData, setinitMarbleFormData] = React.useState({});\n  const [initMarbleResponse, setinitMarbleResponse] = React.useState('');\n  {/* next line */}\n  const getreadMarble = () => {\n    fetch(`/api/readMarble/${marbleName}`).then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      return res.json();\n    }).then(data => {\n      if (data.Error) {\n        throw new Error(data.Error);\n      }\n      var responseData = data.response;\n      delete responseData.name;\n      delete responseData.docType;\n      setreadMarbleData(responseData);\n    }).catch(error => {\n      console.error('Error fetching marble data:', error.message);\n      if (error.message.includes('Marble does not exist')) {\n        setreadMarbleData('Marble does not exist');\n      } else {\n        setreadMarbleData('Failed to fetch data');\n      }\n    });\n  };\n  const getdeleteMarble = async () => {\n    try {\n      if (!deletemarbleName.trim()) {\n        // If the name field is empty, handle it appropriately\n        console.error('Marble name cannot be empty');\n        setdeleteMarbleData('Marble name cannot be empty');\n        return;\n      }\n      const encodedMarble = btoa(JSON.stringify({\n        name: deletemarbleName\n      }));\n      const response = await axios.post('/api/deleteMarble/', {\n        name: deletemarbleName\n      });\n      setdeleteMarbleData(response.data);\n    } catch (error) {\n      console.error('Error deleting marble:', error);\n      setdeleteMarbleData('Error deleting marble');\n    }\n  };\n  const getreadMarblePrivateDetails = () => {\n    fetch(`/api/readMarblePrivateDetails/${marbleName}`).then(res => res.json()).then(data => setreadMarblePrivateDetailsData(data.response));\n  };\n  const getMarblesByRange = () => {\n    fetch(`/api/getMarblesByRange/${marbleNameRange1}/${marbleNameRange2}`).then(res => res.json()).then(data => setgetMarblesByRangeData(data.response));\n  };\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setinitMarbleFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const initMarble = e => {\n    e.preventDefault();\n    // Make API request to your Node.js server with formData in the request body\n    axios.post('/api/initMarble', initMarbleformData).then(response => {\n      // Set the response in state\n      setinitMarbleResponse(response.data);\n      setinitMarbleFormData({});\n    }).catch(error => {\n      // Handle error\n      console.error('Error:', error);\n      // Clear responseText state in case of error\n      setinitMarbleResponse('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [\"/* ------------------------------------------------------------------ */\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: marbleName,\n            onChange: e => setmarbleName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: '10px',\n              backgroundColor: 'blue',\n              color: 'white',\n              padding: '10px',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            onClick: getreadMarble,\n            children: \"readMarble\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: '10px',\n              backgroundColor: 'green',\n              color: 'white',\n              padding: '10px',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            onClick: getreadMarblePrivateDetails,\n            children: \"readMarblePrivateDetails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 3\n        }, this), readMarbledata && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxWidth: '500px',\n              overflowWrap: 'break-word',\n              backgroundColor: 'white',\n              color: 'black',\n              padding: '10px',\n              border: 'none',\n              borderRadius: '5px',\n              fontSize: '0.5em'\n            },\n            children: [\"Response: \", readMarbledata]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 5\n        }, this), readMarblePrivateDetailsdata && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxWidth: '500px',\n              overflowWrap: 'break-word',\n              backgroundColor: 'white',\n              color: 'black',\n              padding: '10px',\n              border: 'none',\n              borderRadius: '5px',\n              fontSize: '0.5em'\n            },\n            children: [\"Response: \", readMarblePrivateDetailsdata]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), \"/* ------------------------------------------------------------------ */\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: marbleNameRange1,\n        onChange: e => setmarbleNameRange1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: marbleNameRange2,\n        onChange: e => setmarbleNameRange2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: 'green',\n          color: 'white',\n          padding: '10px',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        onClick: getMarblesByRange,\n        children: \"getMarblesByRange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this), getMarblesByRangedata && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '500px',\n          overflowWrap: 'break-word'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Response: \", getMarblesByRangedata]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), \"/*---------------------------------------------------------------------*/\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: initMarble,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: initMarbleformData.name || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"city:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"city\",\n            value: initMarbleformData.city || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"dob:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"dob\",\n            value: initMarbleformData.dob || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"age:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"age\",\n            value: initMarbleformData.age || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"postcode:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"postcode\",\n            value: initMarbleformData.postcode || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"owner:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"owner\",\n            value: initMarbleformData.owner || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"address\",\n            value: initMarbleformData.address || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"passport:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"passport\",\n            value: initMarbleformData.passport || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"ni:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"ni\",\n            value: initMarbleformData.ni || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"creditscore:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"creditscore\",\n            value: initMarbleformData.creditscore || '',\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this), initMarbleResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Response: \", initMarbleResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), \"/*------------------------------------------------------------------ */\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"deletemarbleName\",\n            children: \"Delete Marble Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"deletemarbleName\",\n            value: deletemarbleName,\n            onChange: e => setdeletemarbleName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getdeleteMarble,\n          children: \"deleteMarble\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: deleteMarbledata && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxWidth: '500px',\n              overflowWrap: 'break-word'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Response: \", deleteMarbledata]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 1\n      }, this), \"/*------------------------------------------------------------------ */\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2vctUAKECwwtAMZ4SnzSozicgww=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","axios","jsxDEV","_jsxDEV","App","_s","readMarbledata","setreadMarbleData","useState","marbleName","setmarbleName","deleteMarbledata","setdeleteMarbleData","deletemarbleName","setdeletemarbleName","readMarblePrivateDetailsdata","setreadMarblePrivateDetailsData","getMarblesByRangedata","setgetMarblesByRangeData","marbleNameRange1","setmarbleNameRange1","marbleNameRange2","setmarbleNameRange2","initMarbleformData","setinitMarbleFormData","initMarbleResponse","setinitMarbleResponse","getreadMarble","fetch","then","res","ok","Error","json","data","responseData","response","name","docType","catch","error","console","message","includes","getdeleteMarble","trim","encodedMarble","btoa","JSON","stringify","post","getreadMarblePrivateDetails","getMarblesByRange","handleFormChange","e","value","target","prevState","initMarble","preventDefault","className","children","style","marginBottom","textAlign","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","backgroundColor","color","padding","border","borderRadius","cursor","onClick","display","justifyContent","marginTop","maxWidth","overflowWrap","fontSize","onSubmit","city","dob","age","postcode","owner","address","passport","ni","creditscore","htmlFor","id","_c","$RefreshReg$"],"sources":["/home/shalu/minifabric/hproject/channel1/vars/chaincode/identitychaincode1/apiserver/digi-prism/src/App.js"],"sourcesContent":["import React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n  const [readMarbledata, setreadMarbleData] = React.useState('');\n  const [marbleName, setmarbleName] = React.useState('');\n  \n  const [deleteMarbledata, setdeleteMarbleData] = React.useState('');\n  const [deletemarbleName, setdeletemarbleName] = React.useState('');\n  \n  \n  \n  const [readMarblePrivateDetailsdata, setreadMarblePrivateDetailsData] = React.useState('');\n  \n  \n  const [getMarblesByRangedata, setgetMarblesByRangeData] = React.useState('');\n  const [marbleNameRange1, setmarbleNameRange1] = React.useState('');\n  const [marbleNameRange2, setmarbleNameRange2] = React.useState(''); \n  \n  const [initMarbleformData, setinitMarbleFormData] = React.useState({});\n  const [initMarbleResponse, setinitMarbleResponse] = React.useState('');\n  \n {/* next line */ }  \n \n    const getreadMarble = () => {\n    fetch(`/api/readMarble/${marbleName}`)\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        return res.json();\n      })\n      .then((data) => {\n        if (data.Error) {\n          throw new Error(data.Error);\n        }\n        var responseData = data.response;\n        delete responseData.name;\n        delete responseData.docType;\n        setreadMarbleData(responseData);\n      })\n      .catch((error) => {\n        console.error('Error fetching marble data:', error.message);\n        if (error.message.includes('Marble does not exist')) {\n          setreadMarbleData('Marble does not exist');\n        } else {\n          setreadMarbleData('Failed to fetch data');\n        }\n      });\n};\n  \n  \n    const getdeleteMarble = async () => {\n        try {\n            if (!deletemarbleName.trim()) {\n            // If the name field is empty, handle it appropriately\n            console.error('Marble name cannot be empty');\n            setdeleteMarbleData('Marble name cannot be empty');\n            return;\n        }\n            const encodedMarble = btoa(JSON.stringify({ name: deletemarbleName }));\n            const response = await axios.post('/api/deleteMarble/', { name: deletemarbleName });\n            setdeleteMarbleData(response.data);\n        } catch (error) {\n            console.error('Error deleting marble:', error);\n            setdeleteMarbleData('Error deleting marble');\n        }\n    };\n  \n    const getreadMarblePrivateDetails = () => {\n    fetch(`/api/readMarblePrivateDetails/${marbleName}`)\n      .then((res) => res.json())\n      .then((data) => setreadMarblePrivateDetailsData(data.response));\n  };\n  \n  const getMarblesByRange = () => {\n    fetch(`/api/getMarblesByRange/${marbleNameRange1}/${marbleNameRange2}`)\n      .then((res) => res.json())\n      .then((data) => setgetMarblesByRangeData(data.response));\n  };\n  \n  \n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setinitMarbleFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n    \n  const initMarble = (e) => {\n    e.preventDefault();\n    // Make API request to your Node.js server with formData in the request body\n    axios.post('/api/initMarble', initMarbleformData)\n      .then(response => {\n        // Set the response in state\n        setinitMarbleResponse(response.data);\n        setinitMarbleFormData({});\n      })\n      .catch(error => {\n        // Handle error\n        console.error('Error:', error);\n        // Clear responseText state in case of error\n        setinitMarbleResponse('');\n      });\n  };\n  \n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      \n/* ------------------------------------------------------------------ */   \n   \n    <div>\n  <div style={{ marginBottom: '10px', textAlign: 'center' }}>\n    <input\n      type=\"text\"\n      value={marbleName}\n      onChange={e => setmarbleName(e.target.value)}\n    />\n\n    <button style={{ marginLeft: '10px', backgroundColor: 'blue', color: 'white', padding: '10px', border: 'none', borderRadius: '5px', cursor: 'pointer' }} onClick={getreadMarble}>readMarble</button>\n\n    <button style={{ marginLeft: '10px', backgroundColor: 'green', color: 'white', padding: '10px', border: 'none', borderRadius: '5px', cursor: 'pointer' }} onClick={getreadMarblePrivateDetails}>readMarblePrivateDetails</button>\n  </div>\n\n  {readMarbledata && (\n    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '10px' }}>\n      <div style={{ maxWidth: '500px', overflowWrap: 'break-word', backgroundColor: 'white', color: 'black', padding: '10px', border: 'none', borderRadius: '5px', fontSize: '0.5em' }}>\n        Response: {readMarbledata}\n      </div>\n    </div>\n  )}\n\n  {readMarblePrivateDetailsdata && (\n    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '10px' }}>\n      <div style={{ maxWidth: '500px', overflowWrap: 'break-word', backgroundColor: 'white', color: 'black', padding: '10px', border: 'none', borderRadius: '5px', fontSize: '0.5em' }}>\n        Response: {readMarblePrivateDetailsdata}\n      </div>\n    </div>\n  )}\n</div>\n\n    \n /* ------------------------------------------------------------------ */\n      \n      <input\n        type=\"text\"\n        value={marbleNameRange1}\n        onChange={e => setmarbleNameRange1(e.target.value)}\n      />\n      \n      <input\n        type=\"text\"\n        value={marbleNameRange2}\n        onChange={e => setmarbleNameRange2(e.target.value)}\n      />\n      \n      <button style={{ backgroundColor: 'green', color: 'white', padding: '10px', border: 'none', borderRadius: '5px', cursor: 'pointer' }}onClick={getMarblesByRange}>getMarblesByRange</button>\n      \n        {getMarblesByRangedata && (\n        <div style={{ maxWidth: '500px', overflowWrap: 'break-word' }}>\n          <p>Response: {getMarblesByRangedata}</p>\n        </div>\n      )}  \n/*---------------------------------------------------------------------*/\n   \n      <form onSubmit={initMarble}>\n        <label>\n          name:\n          <input type=\"text\" name=\"name\" value={initMarbleformData.name || ''} onChange={handleFormChange} />\n        </label>\n        <label>\n          city:\n          <input type=\"text\" name=\"city\" value={initMarbleformData.city || ''} onChange={handleFormChange} />\n        </label>\n        <label>\n          dob:\n          <input type=\"text\" name=\"dob\" value={initMarbleformData.dob || ''} onChange={handleFormChange} />\n        </label>\n        <label>\n          age:\n          <input type=\"text\" name=\"age\" value={initMarbleformData.age || ''} onChange={handleFormChange} />\n        </label>\n        <label>\n          postcode:\n          <input type=\"text\" name=\"postcode\" value={initMarbleformData.postcode || ''} onChange={handleFormChange} />\n        </label>\n        <label>\n          owner:\n          <input type=\"text\" name=\"owner\" value={initMarbleformData.owner || ''} onChange={handleFormChange} />\n        </label>\n        <label>\n          address:\n          <input type=\"text\" name=\"address\" value={initMarbleformData.address || ''} onChange={handleFormChange} />\n        </label>\n        <label>\n          passport:\n          <input type=\"text\" name=\"passport\" value={initMarbleformData.passport || ''} onChange={handleFormChange} />\n        </label>\n        <label>\n          ni:\n          <input type=\"text\" name=\"ni\" value={initMarbleformData.ni || ''} onChange={handleFormChange} />\n        </label>\n        <label>\n          creditscore:\n          <input type=\"text\" name=\"creditscore\" value={initMarbleformData.creditscore || ''} onChange={handleFormChange} />\n        </label>\n        \n        {/* Add more input fields as needed */}\n        <button type=\"submit\">Submit</button>\n      </form>\n      {/* Display the response */}\n      {initMarbleResponse && (\n        <div>\n          <p>Response: {initMarbleResponse}</p>\n        </div>\n      )}\n/*------------------------------------------------------------------ */ \n\n\n\n\n\n<div>\n    <div>\n        <label htmlFor=\"deletemarbleName\">Delete Marble Name:</label>\n        <input\n        type=\"text\"\n        id=\"deletemarbleName\"\n        value={deletemarbleName}\n        onChange={e => setdeletemarbleName(e.target.value)}\n      />\n    </div>           \n      <button onClick={getdeleteMarble}>deleteMarble</button>\n      <div>                \n        {deleteMarbledata && (\n        <div style={{ maxWidth: '500px', overflowWrap: 'break-word' }}>\n          <p>Response: {deleteMarbledata}</p>\n        </div>\n      )}\n      \n     </div> \n </div>\n    \n  /*------------------------------------------------------------------ */  \n           \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}